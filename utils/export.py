# utils/export.py
import pandas as pd
from sqlalchemy.ext.asyncio import async_sessionmaker, create_async_engine
from sqlalchemy import select
from db.models import User, Posts
from aiogram import Router, F
from aiogram.types import Message, FSInputFile
from config import config

base = Router()

@base.message(F.text == '–°–∫–∞—á–∞—Ç—å –±–∞–∑—É')
async def export_to_excel(message: Message):
    engine = create_async_engine(f'postgresql+asyncpg://{config.POSTGRES_USER}:{config.POSTGRES_PASSWORD}@postgres-bot2:5432/{config.POSTGRES_DATABASE}')
    async_session = async_sessionmaker(engine, expire_on_commit=False)

    async with async_session() as session:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        result_users = await session.execute(select(User))
        users = result_users.scalars().all()

        users_data = [{
            "ID": u.id,
            "–ò–º—è": u.name,
            "Username": u.username,
            "Telegram ID": u.telegram_id,
            "–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏": u.date_create.strftime("%Y-%m-%d %H:%M"),
            "–ü–æ—Å—Ç–æ–≤": u.post_count
        } for u in users]

        df_users = pd.DataFrame(users_data)

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã
        result_posts = await session.execute(select(Posts))
        posts = result_posts.scalars().all()

        posts_data = [{
            "ID": p.id,
            "User ID": p.user_id,
            "–ù–∏–∫": p.username,
            "–î–∞—Ç–∞ –ø–æ—Å—Ç–∞": p.date_create.strftime("%Y-%m-%d %H:%M")
        } for p in posts]

        df_posts = pd.DataFrame(posts_data)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º Excel
        filepath = "export.xlsx"
        with pd.ExcelWriter(filepath, engine="openpyxl") as writer:
            df_users.to_excel(writer, sheet_name="Users", index=False)
            df_posts.to_excel(writer, sheet_name="Posts", index=False)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ Telegram
    file = FSInputFile(filepath)
    await message.answer_document(file, caption="üì¶ –≠–∫—Å–ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
